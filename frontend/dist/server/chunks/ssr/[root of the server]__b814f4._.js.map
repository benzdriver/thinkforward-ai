{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/ziyanzhou/Projects/thinkforward-ai/frontend/types/user.ts"],"sourcesContent":["export interface User {\n    name: string;\n    email: string;\n    password: string;\n}\n\nexport enum UserRole {\n  ADMIN = 'Admin',\n  CONSULTANT = 'Consultant',\n  CLIENT = 'Client',\n  GUEST = 'Guest'\n}\n\nexport interface UserPermissions {\n  canAccessDashboard: boolean;\n  canAccessAIAssistant: boolean;\n  canFillForms: boolean;\n  canReviewClients: boolean;\n  canAssignConsultants: boolean;\n  canManageSystem: boolean;\n}\n\nexport const rolePermissions: Record<UserRole, UserPermissions> = {\n  [UserRole.ADMIN]: {\n    canAccessDashboard: true,\n    canAccessAIAssistant: true,\n    canFillForms: true,\n    canReviewClients: true,\n    canAssignConsultants: true,\n    canManageSystem: true\n  },\n  [UserRole.CONSULTANT]: {\n    canAccessDashboard: true,\n    canAccessAIAssistant: true,\n    canFillForms: true,\n    canReviewClients: true,\n    canAssignConsultants: false,\n    canManageSystem: false\n  },\n  [UserRole.CLIENT]: {\n    canAccessDashboard: true,\n    canAccessAIAssistant: true,\n    canFillForms: true,\n    canReviewClients: false,\n    canAssignConsultants: false,\n    canManageSystem: false\n  },\n  [UserRole.GUEST]: {\n    canAccessDashboard: false,\n    canAccessAIAssistant: false,\n    canFillForms: false,\n    canReviewClients: false,\n    canAssignConsultants: false,\n    canManageSystem: false\n  }\n} "],"names":[],"mappings":";;;;AAMO,IAAA,AAAK,kCAAA;;;;;WAAA;;AAgBL,MAAM,kBAAqD;IAChE,SAAgB,EAAE;QAChB,oBAAoB;QACpB,sBAAsB;QACtB,cAAc;QACd,kBAAkB;QAClB,sBAAsB;QACtB,iBAAiB;IACnB;IACA,cAAqB,EAAE;QACrB,oBAAoB;QACpB,sBAAsB;QACtB,cAAc;QACd,kBAAkB;QAClB,sBAAsB;QACtB,iBAAiB;IACnB;IACA,UAAiB,EAAE;QACjB,oBAAoB;QACpB,sBAAsB;QACtB,cAAc;QACd,kBAAkB;QAClB,sBAAsB;QACtB,iBAAiB;IACnB;IACA,SAAgB,EAAE;QAChB,oBAAoB;QACpB,sBAAsB;QACtB,cAAc;QACd,kBAAkB;QAClB,sBAAsB;QACtB,iBAAiB;IACnB;AACF"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/ziyanzhou/Projects/thinkforward-ai/frontend/pages/_app.tsx"],"sourcesContent":["import { ClerkProvider, useAuth } from '@clerk/nextjs';\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport \"../styles/globals.css\";\nimport { UserRole } from \"../types/user\";\nimport type { AppProps } from 'next/app';\n\n// 公共页面列表\nconst publicPages = [\n  \"/\",\n  \"/about\",\n  \"/pricing\",\n  \"/sign-in\",\n  \"/sign-in/[[...index]]\",\n  \"/sign-up\",\n  \"/sign-up/[[...index]]\",\n  \"/initial-assessment\"\n];\n\nexport default function MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <ClerkProvider publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || 'pk_test_dummy_key_for_development'}>\n      <AuthenticatedApp Component={Component} pageProps={pageProps} />\n    </ClerkProvider>\n  );\n}\n\n// Define custom props type for AuthenticatedApp\ntype AuthAppProps = {\n  Component: AppProps['Component'];\n  pageProps: AppProps['pageProps'];\n};\n\n// 嵌套的组件，可以安全地使用useAuth\nfunction AuthenticatedApp({ Component, pageProps }: AuthAppProps) {\n  const router = useRouter();\n  const { userId, isLoaded, getToken } = useAuth();\n  const [userRole, setUserRole] = useState<UserRole>(UserRole.GUEST);\n  \n  // 检查当前页面是否为公共页面\n  const isPublicPage = publicPages.includes(router.pathname) || \n                        router.pathname.startsWith(\"/api/\");\n\n  // 获取用户角色\n  useEffect(() => {\n    async function fetchUserRole() {\n      const response = await fetch(\"/api/user/role\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('clerk-token')}`\n        }\n      });\n      const data = await response.json();\n      setUserRole(data.role || UserRole.CLIENT);\n    }\n    \n    fetchUserRole();\n  }, []);\n\n  // 路由保护逻辑\n  useEffect(() => {\n    // 已经在登录页面，不要再重定向到登录页面\n    if (router.pathname === \"/sign-in\" || router.pathname.startsWith(\"/sign-in/\")) {\n      return;\n    }\n\n    if (!localStorage.getItem('clerk-token')) {\n      // 未登录用户只能访问公共页面\n      if (!isPublicPage) {\n        router.push(\"/sign-in\");\n      }\n    } else {\n      // 角色权限路由保护\n      if (router.pathname.startsWith(\"/consultant/\") && \n          userRole !== UserRole.CONSULTANT && \n          userRole !== UserRole.ADMIN) {\n        router.push(\"/dashboard\");\n      }\n      \n      if (router.pathname.startsWith(\"/admin/\") && \n          userRole !== UserRole.ADMIN) {\n        router.push(\"/dashboard\");\n      }\n    }\n  }, [router.pathname, isPublicPage, userRole, router]);\n\n  // 认证相关逻辑\n  // 如果页面正在加载或是公共页面，直接渲染\n  if (!isLoaded || isPublicPage) {\n    return <Component {...pageProps} userRole={userRole} />;\n  }\n  \n  // 如果非公共页面且用户未登录，重定向到登录页\n  if (!userId) {\n    // 使用客户端重定向\n    if (typeof window !== 'undefined') {\n      router.push('/sign-in');\n      return <div>Redirecting to sign in...</div>;\n    }\n    return null;\n  }\n  \n  // 用户已登录，渲染页面\n  return <Component {...pageProps} userRole={userRole} />;\n}"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;AAAA;;;;;;;AAOA,SAAS;AACT,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC9D,qBACE,qKAAC,kKAAA,CAAA,gBAAa;QAAC,gBAAgB,gGAAiD;kBAC9E,cAAA,qKAAC;YAAiB,WAAW;YAAW,WAAW;;;;;;;;;;;AAGzD;AAQA,uBAAuB;AACvB,SAAS,iBAAiB,EAAE,SAAS,EAAE,SAAS,EAAgB;IAC9D,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAY,sGAAA,CAAA,WAAQ,CAAC,KAAK;IAEjE,gBAAgB;IAChB,MAAM,eAAe,YAAY,QAAQ,CAAC,OAAO,QAAQ,KACnC,OAAO,QAAQ,CAAC,UAAU,CAAC;IAEjD,SAAS;IACT,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,MAAM,WAAW,MAAM,MAAM,kBAAkB;gBAC7C,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;gBAChE;YACF;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,YAAY,KAAK,IAAI,IAAI,sGAAA,CAAA,WAAQ,CAAC,MAAM;QAC1C;QAEA;IACF,GAAG,EAAE;IAEL,SAAS;IACT,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,sBAAsB;QACtB,IAAI,OAAO,QAAQ,KAAK,cAAc,OAAO,QAAQ,CAAC,UAAU,CAAC,cAAc;YAC7E;QACF;QAEA,IAAI,CAAC,aAAa,OAAO,CAAC,gBAAgB;YACxC,gBAAgB;YAChB,IAAI,CAAC,cAAc;gBACjB,OAAO,IAAI,CAAC;YACd;QACF,OAAO;YACL,WAAW;YACX,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,mBAC3B,aAAa,sGAAA,CAAA,WAAQ,CAAC,UAAU,IAChC,aAAa,sGAAA,CAAA,WAAQ,CAAC,KAAK,EAAE;gBAC/B,OAAO,IAAI,CAAC;YACd;YAEA,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,cAC3B,aAAa,sGAAA,CAAA,WAAQ,CAAC,KAAK,EAAE;gBAC/B,OAAO,IAAI,CAAC;YACd;QACF;IACF,GAAG;QAAC,OAAO,QAAQ;QAAE;QAAc;QAAU;KAAO;IAEpD,SAAS;IACT,sBAAsB;IACtB,IAAI,CAAC,YAAY,cAAc;QAC7B,qBAAO,qKAAC;YAAW,GAAG,SAAS;YAAE,UAAU;;;;;;IAC7C;IAEA,wBAAwB;IACxB,IAAI,CAAC,QAAQ;QACX,WAAW;QACX,uCAAmC;;QAGnC;QACA,OAAO;IACT;IAEA,aAAa;IACb,qBAAO,qKAAC;QAAW,GAAG,SAAS;QAAE,UAAU;;;;;;AAC7C"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}